@mixin squareIconButton {
   &.#{$prefix}-button--icon:not(.#{$prefix}-button--icon-after):not(.#{$prefix}-button--icon-before) {
      @content;
   }
}

@mixin button-color-variant($name: '') {
   @if ($name != '') {
      $name: '-#{$name}';
   }
   $color: 'element#{$name}-font-color';
   $background-color: 'element#{$name}-background-color';
   $background-color-dark: 'element#{$name}-background-color-dark';
   $background-color-light: 'element#{$name}-background-color-light';
   background-color: css-var($background-color);
   border-color: css-var($background-color);
   color: css-var($color);

   &.env-button--ghost {
      background-color: transparent;
      border-color: css-var($background-color-light);
      color: css-var($background-color-light);
   }

   &:hover,
   &:focus {
      background-color: css-var($background-color-dark);
      border-color: css-var($background-color-dark);
      color: css-var($color);
   }

   &:active {
      background-color: css-var($background-color-light);
      border-color: css-var($background-color-dark);
      color: css-var($color);
   }
}

@mixin button-size($size) {
   // Radius - scaled relative to variable in settings (0.375em default),
   $radiuses: (
      // small =>  3px (default)
      small: ((3 / 16 / 0.375) / (14 / 16)),
      // medium =>  6px (default)
      medium: (6 / 16 / 0.375),
      // large => 10px (default)
      large: ((10 / 16 / 0.375) / (20 / 16)),
      // slim => 6px  (Same as medium),
      slim: (6 / 16 / 0.375)
   );
   $minHeights: (
      small: (
         22 / 14 * 1em,
      ),
      medium: (
         44 / 16 * 1em,
      ),
      large: (
         56 / 20 * 1em,
      ),
      slim: (
         32 / 16 * 1em,
      ),
   );
   $fontSizes: (
      // small => 14 px
      small: 'font-size-small',
      // medium => 16 px
      medium: 'font-size-medium',
      // large => 20 px
      large: 'font-size-large',
      slim: 'font-size-medium'
   );
   $paddingsX: (
      small: (
         (8 / 14) * 1em,
      ),
      medium: (
         (21 / 16) * 1em,
      ),
      large: (
         (23 / 20) * 1em,
      ),
      slim: (
         (8 / 16) * 1em,
      ),
   );
   // Icon size in em: 1em / [relative-button-font-size] * [icon-size in px] / [base-font-size in px]
   $iconSizes: (
      small: 1em / 0.875 * 11 / 16,
      medium: 1em / 1 * 22 / 16,
      large: 1em / 1.25 * 28 / 16,
      slim: 1em / 1 * 15 / 16,
   );

   $font-size: map-get($fontSizes, $size);
   $padding-x: map-get($paddingsX, $size);
   $icon-size: map-get($iconSizes, $size);
   $radius-scale: map-get($radiuses, $size);
   $min-height: map-get($minHeights, $size);

   font-size: css-var($font-size);
   padding: 0 $padding-x;
   border-radius: calc(#{css-var('button-border-radius')} * #{$radius-scale});
   min-height: $min-height;

   @include squareIconButton {
      min-height: auto;
      height: 0;
      width: $min-height;
      padding: calc(#{$min-height} - 2px) 0 0; // Compensate for border
   }

   &.#{$prefix}-button--icon .env-icon {
      width: #{$icon-size};
      height: #{$icon-size};
      margin: #{($icon-size / -2)} 0 0 0;
   }

   &.#{$prefix}-button--icon-before {
      padding-left: calc(#{$padding-x} + #{$icon-size} + #{$padding-x / 2});

      .env-icon {
         left: $padding-x;
      }
   }

   &.#{$prefix}-button--icon-after {
      padding-right: calc(#{$padding-x} + #{$icon-size} + #{$padding-x / 2});

      .env-icon {
         right: $padding-x;
      }
   }

   @include squareIconButton {
      .env-icon {
         margin: #{($icon-size / -2)} 0 0 #{($icon-size / -2)};
      }
   }
}
